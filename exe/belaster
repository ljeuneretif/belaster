#!/usr/bin/env python

from sys import argv
from belaster.engine.application_context import ApplicationContext
from belaster.engine.application_context_binder import ApplicationContextBinder
from belaster.engine.arguments import Arguments
from belaster.engine.import_belaster_file import BELASTER_FILE_DEFAULT_NAME, import_belaster_file
from belaster.engine.rule_applier import RuleApplier
from os import getcwd


# Create application context and bind it.
context = ApplicationContext()
ApplicationContextBinder.application_context = context


# Load User's Belaster file.
# ubm is the User's Belaster Module.
# ubm loads all the symbols from Belaster through the statement `from belaster import *`.
# All the interactions with ubm happen by calling the Belaster symbols loaded in ubm.
ubm = import_belaster_file(path=getcwd(), filename=BELASTER_FILE_DEFAULT_NAME)


# Verify there is no loop.
context.dependency_hypergraph.build_topological_ordering_of_hyperedges()


# Parse the command-line arguments.
cli_args = Arguments()
cli_args.initialize(argv[1:])
cli_args.parse()

context.environment = cli_args.environment

# Apply the goals given in the command line.
rule_applier = RuleApplier()
rule_applier.initialize(cli_args.goals)
rule_applier.apply()
